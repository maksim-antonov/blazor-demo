@page "/"
@using Demo.Shared
@using Demo.Shared.Extensions
@inject HttpClient Http
@inject IJSRuntime _jsRuntime

<PageTitle>Image carousel</PageTitle>

<h1>Image carousel</h1>

<p>This component demonstrates fetching data from the server & my carousel</p>

@if (imageCarousel == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="article" @ref="Measure">
        <section id="init-section">
            <div class="container">
                <h1>Init</h1>
                <p>Carousel speed: @imageCarousel.CarouselSpeed</p>
                <p>Images: </p>
                <table class="table">
                    <thead>
                    <tr>
                        <th>Title</th>
                        <th>Picture</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var image in imageCarousel.Images)
                    {
                        <tr>
                            <td>@image.ImageTitle</td>
                            <td>
                                <img width="100px" src="data:image/png;base64,@Convert.ToBase64String(image.ImageData)" alt="@image.ImageTitle in @image.ImageCarouselId"/>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </section>
        <section class="ms-category">
            <div class="container">
                <h2>Carousel</h2>
                <div class="row">
                    <div class="col-xl-12">
                        <div class="ms-category-block owl-carousel" data-carousel-speed="@imageCarousel.CarouselSpeed">
                            @foreach (var item in imageCarousel.Images)
                            {
                                <div class="ms-cat-box">
                                    <span class="ms-cat-icon">
                                        <span class="ms-lbl">discount!</span>
                                        <img src="data:image/png;base64,@Convert.ToBase64String(item.ImageData)" alt="@item.ImageTitle in @item.ImageCarouselId">
                                        <h4 class="ms-cat-title">@(item.ImageTitle.ToDefaultTitle())</h4>
                                        <p class="items">desc here</p>
                                    </span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}

@code {
    private ElementReference Measure;

    private ImageCarousel? imageCarousel;
    
    protected override async Task OnInitializedAsync()
    {
        imageCarousel = await Http.GetFromJsonAsync<ImageCarousel>("/api/Images/ImageCarousel");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // app.js
            await _jsRuntime.InvokeVoidAsync("applyCarousel");
        }

        await base.OnAfterRenderAsync(firstRender);
    }

}